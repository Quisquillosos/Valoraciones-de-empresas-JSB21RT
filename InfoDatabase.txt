Token David: 
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImE1ZTA3MTE1LTAxZmEtNDZkOS05MGY1LWQzYTY5ODdlMjU5YSIsImlhdCI6MTY5NDM1ODE2MiwiZXhwIjoxNjk0OTYyOTYyfQ.w1F1U2KiJouB-m_B1nu4PQ2yh9WJ12Fn2xR5Njg7QWY

Token David2:
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE4YmZjMmE5LWRkOGMtNDVkMS1iMWRkLWM2NTFiM2RhZDU2OCIsImlhdCI6MTY5NDM1ODIwMiwiZXhwIjoxNjk0OTYzMDAyfQ.GxVZSLA05LgSBoZkZ6TanmscBrlk_IhikvFtxVl7zNw

Token Angela:
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjM2ZTIyOGMxLTc0M2UtNDVhMi05NGNjLWYzZmIxYjQ5YzJmMSIsImlhdCI6MTY5NDM1ODI0OCwiZXhwIjoxNjk0OTYzMDQ4fQ.Pn0Ip6tJqXZwP3XIK4PTAgO_bVc2tC8LDXk1r9FLCMk

Token Noelia:
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImJkMzBjZjhjLTZhZmUtNDYyNy04MjZkLTI5ZDVjZmIwMDZjZiIsImlhdCI6MTY5NDM1ODI2MywiZXhwIjoxNjk0OTYzMDYzfQ.DqEKreveb_c9QtqMtKIvzYwaY8qduGKFwPaj1AFJFaY

Token Dumitru:
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEyY2U5NDEyLTg5OTAtNDY3Mi04M2ZlLWIyYTFlZDkyODYwZSIsImlhdCI6MTY5NDM1ODI4MCwiZXhwIjoxNjk0OTYzMDgwfQ.0GaUcQXtzZYRTpm0gD9kr7Rhdkn32TW08jI1ZUJ86NY


import ListCompanies from "../components/ListCompanies/ListCompanies";
import Searcher from "../components/Searcher/Searcher";
import useCompanies from "../hooks/useCompanies";
import "./CompaniesListPage.module.css";

const CompaniesListPage = () => {
  const { companiesList, loading, error } = useCompanies();

  if (loading) return <div>loading</div>;

  if (error) return <div>error</div>;

  return (
    <div>
      <Searcher></Searcher>
      <ListCompanies companies={companiesList} />
    </div>
  );
};

export default CompaniesListPage;

import { useState } from "react";
import { getAllCompaniesFilteredService } from "../../services";
import Accordion from "../Accordion/Accordion";
import imgSrc from "/logoPerson.jpg";
import { useNavigate } from "react-router-dom";

const Searcher = () => {
  const navigate = useNavigate();
  const [keyword, setKeyword] = useState("");
  const [error, setError] = useState("");
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const data = await getAllCompaniesFilteredService(keyword);
      console.log(data);
      navigate("/companies");
    } catch (err) {
      setError("Ha ocurrido un error en tu busqueda");
    }
  };
  return (
    <>
      <Accordion imgSrc={imgSrc}>
        <form onSubmit={handleSubmit}>
          <input
            type="text"
            value={keyword}
            onChange={(e) => setKeyword(e.target.value)}
          />
        </form>
        {error && <p>{error}</p>}
      </Accordion>
    </>
  );
};

export default Searcher;
